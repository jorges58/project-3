# -*- coding: utf-8 -*-
"""project-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/jorges58/68001a9558e274f203b5b5e5be60d8c7/project-3.ipynb
"""

import pandas as pd
from mlxtend.frequent_patterns import apriori, association_rules

# Load the data
df = pd.read_csv('/orders.csv')

# Display the columns to ensure they're correct
print(df.columns)

# 1. Best-selling items for each store:
def get_best_selling_items_per_store(df, store_name):
    """
    Returns the best-selling items for a specific store.
    """
    store_data = df[df['Store Name'] == store_name]
    best_selling_items = store_data['Product Name'].value_counts().head(5)  # Top 5 items
    return best_selling_items

# Get best-selling items for each store
for store_name in df['Store Name'].unique():
    print(f"Best-selling items for Store {store_name}:")
    print(get_best_selling_items_per_store(df, store_name))
    print("-" * 20)

# 2. Best-selling items across the entire organization:
best_selling_items_overall = df['Product Name'].value_counts().head(10)  # Top 10 items
print("Best-selling items across the entire organization:")
print(best_selling_items_overall)
print("-" * 20)

# 3. Market Basket Analysis:
# Create a one-hot encoded DataFrame for market basket analysis
basket = df.groupby(['Customer Name', 'Order ID', 'Product Name'])['Product Price'].sum().unstack().reset_index().fillna(0)
basket.set_index(['Customer Name', 'Order ID'], inplace=True)
basket = basket.applymap(lambda x: 1 if x > 0 else 0)

# Apply Apriori algorithm to find frequent itemsets
frequent_itemsets = apriori(basket, min_support=0.05, use_colnames=True)

# adding the missing 'num_itemsets' column
frequent_itemsets['num_itemsets'] = frequent_itemsets['itemsets'].apply(lambda x: len(x))